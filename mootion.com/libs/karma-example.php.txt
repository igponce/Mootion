<?
include('../config.php');
include(mnminclude.'user.php');

header("Content-Type: text/plain");

$karma_base=10;
$min_karma=6;
$max_karma=20;
$negative_per_day = 0.1;
$history_from = time() - 3600*24*7;
$points_link_users = 4;
$points_vote_users = 4;
$points_received_vote_users = 2;

/////////////////////////


$total_active_users = $db->get_var("SELECT count(*) from  users  WHERE exists (select vote_user_id from votes where vote_date > FROM_UNIXTIME($history_from) and vote_user_id = user_id)");
$total_votes = $db->get_var("SELECT count(*) from votes  WHERE vote_date > FROM_UNIXTIME($history_from)");

$average_votes = $total_votes/$total_active_users;

print "Average: $average_votes\n";








///////////////////////
$query = $db->get_row("SELECT count(*) as articles, user_id from links, users WHERE link_date > FROM_UNIXTIME($history_from) and link_author=user_id and link_status = 'published' group by user_id order by articles desc limit 1");
$max_published = $query->articles;

$query = $db->get_row("SELECT count(*) as votes, user_id from votes, users, links WHERE vote_date > FROM_UNIXTIME($history_from) and vote_user_id=user_id and link_id = vote_link_id and link_status = 'published' and vote_date < link_published_date group by user_id order by votes desc limit 1");
$max_published_vote = $query->votes;


echo "MAX Votes = $max_published_vote\n";



$users = $db->get_results("SELECT user_id from users order by user_login");

foreach($users as $dbuser) {
	$user = new User;
	$user->id=$dbuser->user_id;
	$user->read();
	$user->all_stats($history_from);

	if($user->total_links > 1)  {
		$pnot = $user->total_links-$user->published_links;
		$karma_1 = ($user->published_links-$pnot/3)/$user->total_links*$points_link_users;
		$karma_1 = min($points_link_users, $karma_1);
	} else 
		$karma_1 = 0;



	if($user->total_votes > 0)  {
		$pnot = $user->total_votes-$user->published_votes;
		$coef = $user->total_votes/($average_votes*2);
		$karma_2 = ($user->published_votes-$pnot/10)/$user->total_votes*$coef; 
		$karma_2 = min($points_vote_users, $karma_2);
	} else 
		$karma_2 = 0;
		


	$karma_3 = 0;
	if ($user->date < time()-86400) {
		$past_time=time() - $db->get_var("select UNIX_TIMESTAMP(max(vote_date)) from votes where vote_user_id=$dbuser->user_id");
		$karma_3 = min($past_time*$negative_per_day/(3600*24), 4);
	}

	if($user->positive_votes_received > 10 && ($user->positive_votes_received+$user->negative_votes_received) > 0 ) 
		$karma_4 = ($user->positive_votes_received-$user->negative_votes_received)/($user->positive_votes_received+$user->negative_votes_received)*$points_received_vote_users;
	else 
		$karma_4 = 0;
	$karma_4 = min($points_received_vote_users, $karma_4);

	
	$karma = max($karma_base+$karma_1+$karma_2-$karma_3+$karma_4, $min_karma);
	$karma = min($karma, $max_karma);
	echo $user->username . ": $karma\n";
	$user->karma = $karma;
	$user->store();


}
?>
